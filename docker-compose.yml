services:
  postgres1:
    image: postgres:15-alpine
    container_name: postgres1
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB1_NAME}
    volumes:
      - pgdata1:/var/lib/postgresql/data
      - ./sql/init_db1.sql:/docker-entrypoint-initdb.d/init_db1.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER"]
      interval: 5s
      retries: 5
    ports:
      - 5440:5432
    networks:
      - airflow-net

  postgres2:
    image: postgres:15-alpine
    container_name: postgres2
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB2_NAME}
    volumes:
      - pgdata2:/var/lib/postgresql/data
      - ./sql/init_db2.sql:/docker-entrypoint-initdb.d/init_db2.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER"]
      interval: 5s
      retries: 5
    ports:
      - 5441:5432
    networks:
      - airflow-net
  airflow:
    build:
      context: .
      dockerfile: DockerFile_AirFlow
    volumes:
      - ./airflow:/opt/airflow
    ports:
      - "8080:8080"
    command: airflow standalone
    networks:
      - airflow-net

networks:
  airflow-net:
    driver: bridge

volumes:
  pgdata1:
  pgdata2: